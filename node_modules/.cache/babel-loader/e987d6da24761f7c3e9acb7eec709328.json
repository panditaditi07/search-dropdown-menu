{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/teainee/Documents/React-tasks/search-dropdown-menu/src/components/DropDown/dropDown.jsx\";\nimport React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleDown, faAngleUp, faTimesCircle, faCheckSquare, faSquare, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport SearchBox from \"../SearchBox/searchBox\";\nimport styles from \"./dropDown.module.scss\";\nimport propTypes from \"prop-types\";\n\nclass DropDown extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      resultList: [],\n      OptionList: [],\n      removeOption: false,\n      showList: false,\n      selectAll: false,\n      hideList: false,\n      searchInput: \"\"\n    };\n\n    this.handleChange = onChange => {\n      this.setState({\n        searchInput: onChange\n      });\n    };\n\n    this.getResult = result => {\n      this.setState({\n        resultList: [...result]\n      });\n    };\n\n    this.removeAllOption = () => {\n      this.setState({\n        OptionList: [],\n        selectAll: false\n      });\n\n      if (this.state.OptionList.length && this.state.hideList === true) {\n        this.setState({\n          showList: true\n        });\n      }\n    };\n\n    this.removeOption = option => {\n      const {\n        OptionList\n      } = this.state;\n      const {\n        showKey,\n        getList\n      } = this.props;\n      let result = OptionList.filter(selectedoption => {\n        return selectedoption[showKey] !== option[showKey];\n      });\n      this.setState({\n        OptionList: result\n      }, () => {\n        getList(this.state.OptionList);\n      });\n      this.setState({\n        removeOption: true\n      });\n\n      if (result.length === 0 || result.length - 1) {\n        this.setState({\n          selectAll: false\n        });\n      }\n    };\n\n    this.removeSelectedOption = option => {\n      this.isSelected(option) ? this.removeOption(option) : this.addToList(option);\n    };\n\n    this.selectAllData = () => {\n      const {\n        data\n      } = this.props;\n      const {\n        selectAll\n      } = this.state;\n      const result = data.map(options => {\n        return options;\n      });\n      this.setState({\n        OptionList: result,\n        selectAll: !selectAll\n      }, () => {\n        if (selectAll === true) {\n          this.setState({\n            OptionList: []\n          });\n        } else {\n          this.setState({\n            OptionList: result\n          });\n        }\n      });\n    };\n\n    this.addToList = option => {\n      const {\n        OptionList\n      } = this.state;\n      const {\n        multipleSelect\n      } = this.props;\n      const options = [...OptionList, { ...option\n      }];\n      this.setState({\n        OptionList: options\n      });\n\n      if (!multipleSelect) {\n        this.setState({\n          OptionList: [{ ...option\n          }]\n        });\n        const {\n          getList\n        } = this.props;\n        getList(option);\n        this.toggle();\n      }\n    };\n\n    this.hideList = event => {\n      const {\n        multipleSelect,\n        getList\n      } = this.props;\n      const {\n        OptionList\n      } = this.state;\n\n      if (event.currentTarget.id === \"dropdown-div\" && !event.currentTarget.contains(event.relatedTarget)) {\n        this.toggle();\n        this.setState({\n          hideList: !this.state.hideList\n        });\n      }\n\n      if (multipleSelect && OptionList.length) {\n        getList(OptionList);\n      }\n    };\n\n    this.toggle = () => {\n      this.setState({\n        showList: !this.state.showList\n      });\n    };\n\n    this.isSelected = option => {\n      const {\n        showKey\n      } = this.props;\n      return this.state.OptionList.some(options => options[showKey] === option[showKey]);\n    };\n\n    this.isAllSelected = () => {\n      if (this.state.resultList.length) return false;\n      return true;\n    };\n\n    this.DropDownToggle = () => {\n      const {\n        OptionList,\n        resultList\n      } = this.state;\n\n      if (!OptionList.length) {\n        this.toggle();\n      } else if (this.state.hideList === true) {\n        if (OptionList.length--) {\n          this.setState({\n            showList: false\n          });\n          console.log(\"Running\");\n        } else {\n          this.toggle();\n          console.log(\"Running else part\");\n        }\n      } else if (this.state.hideList === false && OptionList.length) {\n        this.setState({\n          showList: true\n        });\n      } else if (this.state.hideList === false && OptionList.length && resultList.length) {\n        this.setState({\n          showList: true\n        });\n      }\n    };\n\n    this.noResults = () => {\n      const {\n        showKey\n      } = this.props;\n      const result = this.state.resultList.some(options => this.state.searchInput !== options[showKey]);\n      console.log(result);\n\n      if (result === false && !this.state.searchInput.length) {\n        return true;\n      }\n\n      if (result === true) {\n        return true;\n      } else if (result === false) {\n        return false;\n      }\n    };\n  }\n\n  /**\n   * returns dropdown list\n   */\n  render() {\n    console.log(this.state.resultList);\n    const {\n      showList,\n      resultList,\n      OptionList,\n      selectAll\n    } = this.state;\n    const {\n      placeholder,\n      data,\n      searchList,\n      showKey,\n      multipleSelect\n    } = this.props;\n    const list = resultList.length ? resultList : data;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        tabIndex: \"0\",\n        id: \"dropdown-div\",\n        onBlur: this.hideList,\n        className: styles[\"dropdown-div\"],\n        \"data-test\": \"DropdownComponent\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: this.DropDownToggle,\n          className: `${styles[\"dropdown-button\"]} ${styles[OptionList.length > 10 ? \"adjustheight\" : \"\"]}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles[\"button-heading\"],\n            children: OptionList.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles[\"selectedOptions\"],\n              children: multipleSelect ? OptionList.map((optionSelected, i) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles[\"multiSelectOption\"],\n                  children: [optionSelected[showKey].length > 10 ? optionSelected[showKey].substring(0, 10) + \"...\" : optionSelected[showKey], /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    onClick: () => {\n                      this.removeOption(optionSelected);\n                    },\n                    className: styles[\"removeOption\"],\n                    icon: faTimesCircle\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 27\n                  }, this)]\n                }, i, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 25\n                }, this);\n              }) : /*#__PURE__*/_jsxDEV(\"div\", {\n                children: OptionList[0][showKey]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: placeholder\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles[\"icons\"],\n            children: [OptionList.length ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              className: styles[\"removeIcon\"],\n              onClick: this.removeAllOption,\n              icon: faTimes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              onClick: this.toggle,\n              \"data-test\": \"icon\",\n              icon: showList ? faAngleUp : faAngleDown,\n              className: styles[\"icon\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), showList && /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"lists\",\n          className: `${styles[\"dropdownlist\"]}`,\n          onBlur: this.hideList,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"searchInput\",\n            className: styles[\"searchBar-div\"],\n            onFocus: this.onSearchFocus,\n            onBlur: this.onSearchBlur,\n            children: /*#__PURE__*/_jsxDEV(SearchBox, {\n              data: data,\n              result: this.getResult,\n              searchkeys: searchList.searchkeys,\n              placeholder: searchList.placeholder,\n              className: styles[\"searchbar\"],\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this), this.noResults() ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles[\"allListDiv\"],\n            children: [multipleSelect && this.isAllSelected() ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles[\"selectAll\"],\n              onClick: this.selectAllData,\n              children: [multipleSelect ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                className: styles[\"check-icon\"],\n                color: \"#3483eb\",\n                size: \"2x\",\n                icon: selectAll ? faCheckSquare : faSquare\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 25\n              }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: styles[\"selectAll-heading\"],\n                children: \"Select All\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), list.map((option, i) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles[\"lists\"],\n                onClick: () => {\n                  this.removeSelectedOption(option);\n                },\n                \"data-test\": \"list\",\n                children: [multipleSelect ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  color: \"#3483eb\",\n                  size: \"2x\",\n                  icon: this.isSelected(option) ? faCheckSquare : faSquare\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 348,\n                  columnNumber: 27\n                }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `${styles[\"list-button\"]} ${styles[this.isSelected(option) ? \"selected\" : \"\"]}`,\n                  children: option[showKey]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 358,\n                  columnNumber: 25\n                }, this)]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 23\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles[\"no-result\"],\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"No results\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nDropDown.propTypes = {\n  /**\n   *  must be array of objects\n   */\n  data: propTypes.array.isRequired,\n\n  /**\n   * must be a string (searchInput)\n   */\n  showKey: propTypes.string.isRequired,\n\n  /**\n   * must be a string\n   */\n  placeholder: propTypes.string,\n\n  /**\n   * must be an object\n   */\n  searchList: propTypes.object,\n\n  /**\n   * must be array of object keys and it is an object of searchList\n   */\n  searchkeys: propTypes.arrayOf(propTypes.string.isRequired),\n\n  /**\n   * will give the result\n   */\n  getList: propTypes.func.isRequired,\n  multipleSelect: propTypes.bool\n};\nDropDown.defaultProps = {\n  placeholder: \"Select\"\n};\nexport default DropDown;","map":{"version":3,"sources":["/home/teainee/Documents/React-tasks/search-dropdown-menu/src/components/DropDown/dropDown.jsx"],"names":["React","Component","FontAwesomeIcon","faAngleDown","faAngleUp","faTimesCircle","faCheckSquare","faSquare","faTimes","SearchBox","styles","propTypes","DropDown","state","resultList","OptionList","removeOption","showList","selectAll","hideList","searchInput","handleChange","onChange","setState","getResult","result","removeAllOption","length","option","showKey","getList","props","filter","selectedoption","removeSelectedOption","isSelected","addToList","selectAllData","data","map","options","multipleSelect","toggle","event","currentTarget","id","contains","relatedTarget","some","isAllSelected","DropDownToggle","console","log","noResults","render","placeholder","searchList","list","optionSelected","i","substring","onSearchFocus","onSearchBlur","searchkeys","array","isRequired","string","object","arrayOf","func","bool","defaultProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SACEC,WADF,EAEEC,SAFF,EAGEC,aAHF,EAIEC,aAJF,EAKEC,QALF,EAMEC,OANF,QAOO,mCAPP;AAQA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,QAAN,SAAuBX,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC/BY,KAD+B,GACvB;AACNC,MAAAA,UAAU,EAAE,EADN;AAENC,MAAAA,UAAU,EAAE,EAFN;AAGNC,MAAAA,YAAY,EAAE,KAHR;AAINC,MAAAA,QAAQ,EAAE,KAJJ;AAKNC,MAAAA,SAAS,EAAE,KALL;AAMNC,MAAAA,QAAQ,EAAE,KANJ;AAONC,MAAAA,WAAW,EAAE;AAPP,KADuB;;AAAA,SAW/BC,YAX+B,GAWfC,QAAD,IAAc;AAC3B,WAAKC,QAAL,CAAc;AAAEH,QAAAA,WAAW,EAAEE;AAAf,OAAd;AACD,KAb8B;;AAAA,SAmB/BE,SAnB+B,GAmBlBC,MAAD,IAAY;AACtB,WAAKF,QAAL,CAAc;AAAET,QAAAA,UAAU,EAAE,CAAC,GAAGW,MAAJ;AAAd,OAAd;AACD,KArB8B;;AAAA,SA+B/BC,eA/B+B,GA+Bb,MAAM;AACtB,WAAKH,QAAL,CAAc;AAAER,QAAAA,UAAU,EAAE,EAAd;AAAkBG,QAAAA,SAAS,EAAE;AAA7B,OAAd;;AACA,UAAI,KAAKL,KAAL,CAAWE,UAAX,CAAsBY,MAAtB,IAAgC,KAAKd,KAAL,CAAWM,QAAX,KAAwB,IAA5D,EAAkE;AAChE,aAAKI,QAAL,CAAc;AAAEN,UAAAA,QAAQ,EAAE;AAAZ,SAAd;AACD;AACF,KApC8B;;AAAA,SA2C/BD,YA3C+B,GA2CfY,MAAD,IAAY;AACzB,YAAM;AAAEb,QAAAA;AAAF,UAAiB,KAAKF,KAA5B;AACA,YAAM;AAAEgB,QAAAA,OAAF;AAAWC,QAAAA;AAAX,UAAuB,KAAKC,KAAlC;AACA,UAAIN,MAAM,GAAGV,UAAU,CAACiB,MAAX,CAAmBC,cAAD,IAAoB;AACjD,eAAOA,cAAc,CAACJ,OAAD,CAAd,KAA4BD,MAAM,CAACC,OAAD,CAAzC;AACD,OAFY,CAAb;AAIA,WAAKN,QAAL,CAAc;AAAER,QAAAA,UAAU,EAAEU;AAAd,OAAd,EAAsC,MAAM;AAC1CK,QAAAA,OAAO,CAAC,KAAKjB,KAAL,CAAWE,UAAZ,CAAP;AACD,OAFD;AAGA,WAAKQ,QAAL,CAAc;AAAEP,QAAAA,YAAY,EAAE;AAAhB,OAAd;;AACA,UAAIS,MAAM,CAACE,MAAP,KAAkB,CAAlB,IAAuBF,MAAM,CAACE,MAAP,GAAgB,CAA3C,EAA8C;AAC5C,aAAKJ,QAAL,CAAc;AAAEL,UAAAA,SAAS,EAAE;AAAb,SAAd;AACD;AACF,KAzD8B;;AAAA,SAkE/BgB,oBAlE+B,GAkEPN,MAAD,IAAY;AACjC,WAAKO,UAAL,CAAgBP,MAAhB,IACI,KAAKZ,YAAL,CAAkBY,MAAlB,CADJ,GAEI,KAAKQ,SAAL,CAAeR,MAAf,CAFJ;AAGD,KAtE8B;;AAAA,SA2E/BS,aA3E+B,GA2Ef,MAAM;AACpB,YAAM;AAAEC,QAAAA;AAAF,UAAW,KAAKP,KAAtB;AACA,YAAM;AAAEb,QAAAA;AAAF,UAAgB,KAAKL,KAA3B;AACA,YAAMY,MAAM,GAAGa,IAAI,CAACC,GAAL,CAAUC,OAAD,IAAa;AACnC,eAAOA,OAAP;AACD,OAFc,CAAf;AAGA,WAAKjB,QAAL,CAAc;AAAER,QAAAA,UAAU,EAAEU,MAAd;AAAsBP,QAAAA,SAAS,EAAE,CAACA;AAAlC,OAAd,EAA6D,MAAM;AACjE,YAAIA,SAAS,KAAK,IAAlB,EAAwB;AACtB,eAAKK,QAAL,CAAc;AAAER,YAAAA,UAAU,EAAE;AAAd,WAAd;AACD,SAFD,MAEO;AACL,eAAKQ,QAAL,CAAc;AAAER,YAAAA,UAAU,EAAEU;AAAd,WAAd;AACD;AACF,OAND;AAOD,KAxF8B;;AAAA,SA+F/BW,SA/F+B,GA+FlBR,MAAD,IAAY;AACtB,YAAM;AAAEb,QAAAA;AAAF,UAAiB,KAAKF,KAA5B;AACA,YAAM;AAAE4B,QAAAA;AAAF,UAAqB,KAAKV,KAAhC;AACA,YAAMS,OAAO,GAAG,CAAC,GAAGzB,UAAJ,EAAgB,EAAE,GAAGa;AAAL,OAAhB,CAAhB;AACA,WAAKL,QAAL,CAAc;AAAER,QAAAA,UAAU,EAAEyB;AAAd,OAAd;;AAEA,UAAI,CAACC,cAAL,EAAqB;AACnB,aAAKlB,QAAL,CAAc;AAAER,UAAAA,UAAU,EAAE,CAAC,EAAE,GAAGa;AAAL,WAAD;AAAd,SAAd;AAEA,cAAM;AAAEE,UAAAA;AAAF,YAAc,KAAKC,KAAzB;AACAD,QAAAA,OAAO,CAACF,MAAD,CAAP;AACA,aAAKc,MAAL;AACD;AACF,KA5G8B;;AAAA,SAkH/BvB,QAlH+B,GAkHnBwB,KAAD,IAAW;AACpB,YAAM;AAAEF,QAAAA,cAAF;AAAkBX,QAAAA;AAAlB,UAA8B,KAAKC,KAAzC;AACA,YAAM;AAAEhB,QAAAA;AAAF,UAAiB,KAAKF,KAA5B;;AACA,UACE8B,KAAK,CAACC,aAAN,CAAoBC,EAApB,KAA2B,cAA3B,IACA,CAACF,KAAK,CAACC,aAAN,CAAoBE,QAApB,CAA6BH,KAAK,CAACI,aAAnC,CAFH,EAGE;AACA,aAAKL,MAAL;AAEA,aAAKnB,QAAL,CAAc;AAAEJ,UAAAA,QAAQ,EAAE,CAAC,KAAKN,KAAL,CAAWM;AAAxB,SAAd;AACD;;AAED,UAAIsB,cAAc,IAAI1B,UAAU,CAACY,MAAjC,EAAyC;AACvCG,QAAAA,OAAO,CAACf,UAAD,CAAP;AACD;AACF,KAjI8B;;AAAA,SAsI/B2B,MAtI+B,GAsItB,MAAM;AACb,WAAKnB,QAAL,CAAc;AAAEN,QAAAA,QAAQ,EAAE,CAAC,KAAKJ,KAAL,CAAWI;AAAxB,OAAd;AACD,KAxI8B;;AAAA,SA8I/BkB,UA9I+B,GA8IjBP,MAAD,IAAY;AACvB,YAAM;AAAEC,QAAAA;AAAF,UAAc,KAAKE,KAAzB;AACA,aAAO,KAAKlB,KAAL,CAAWE,UAAX,CAAsBiC,IAAtB,CACJR,OAAD,IAAaA,OAAO,CAACX,OAAD,CAAP,KAAqBD,MAAM,CAACC,OAAD,CADnC,CAAP;AAGD,KAnJ8B;;AAAA,SAwJ/BoB,aAxJ+B,GAwJf,MAAM;AACpB,UAAI,KAAKpC,KAAL,CAAWC,UAAX,CAAsBa,MAA1B,EAAkC,OAAO,KAAP;AAClC,aAAO,IAAP;AACD,KA3J8B;;AAAA,SAgK/BuB,cAhK+B,GAgKd,MAAM;AACrB,YAAM;AAAEnC,QAAAA,UAAF;AAAcD,QAAAA;AAAd,UAA6B,KAAKD,KAAxC;;AACA,UAAI,CAACE,UAAU,CAACY,MAAhB,EAAwB;AACtB,aAAKe,MAAL;AACD,OAFD,MAEO,IAAI,KAAK7B,KAAL,CAAWM,QAAX,KAAwB,IAA5B,EAAkC;AACvC,YAAIJ,UAAU,CAACY,MAAX,EAAJ,EAAyB;AACvB,eAAKJ,QAAL,CAAc;AAAEN,YAAAA,QAAQ,EAAE;AAAZ,WAAd;AACAkC,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD,SAHD,MAGO;AACL,eAAKV,MAAL;AACAS,UAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD;AACF,OARM,MAQA,IAAI,KAAKvC,KAAL,CAAWM,QAAX,KAAwB,KAAxB,IAAiCJ,UAAU,CAACY,MAAhD,EAAwD;AAC7D,aAAKJ,QAAL,CAAc;AAAEN,UAAAA,QAAQ,EAAE;AAAZ,SAAd;AACD,OAFM,MAEA,IACL,KAAKJ,KAAL,CAAWM,QAAX,KAAwB,KAAxB,IACAJ,UAAU,CAACY,MADX,IAEAb,UAAU,CAACa,MAHN,EAIL;AACA,aAAKJ,QAAL,CAAc;AAAEN,UAAAA,QAAQ,EAAE;AAAZ,SAAd;AACD;AACF,KArL8B;;AAAA,SAyL/BoC,SAzL+B,GAyLnB,MAAM;AAChB,YAAM;AAAExB,QAAAA;AAAF,UAAc,KAAKE,KAAzB;AACA,YAAMN,MAAM,GAAG,KAAKZ,KAAL,CAAWC,UAAX,CAAsBkC,IAAtB,CACZR,OAAD,IAAa,KAAK3B,KAAL,CAAWO,WAAX,KAA2BoB,OAAO,CAACX,OAAD,CADlC,CAAf;AAGAsB,MAAAA,OAAO,CAACC,GAAR,CAAY3B,MAAZ;;AACA,UAAIA,MAAM,KAAK,KAAX,IAAoB,CAAC,KAAKZ,KAAL,CAAWO,WAAX,CAAuBO,MAAhD,EAAwD;AACtD,eAAO,IAAP;AACD;;AACD,UAAIF,MAAM,KAAK,IAAf,EAAqB;AACnB,eAAO,IAAP;AACD,OAFD,MAEO,IAAIA,MAAM,KAAK,KAAf,EAAsB;AAC3B,eAAO,KAAP;AACD;AACF,KAvM8B;AAAA;;AAwM/B;AACF;AACA;AACE6B,EAAAA,MAAM,GAAG;AACPH,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKvC,KAAL,CAAWC,UAAvB;AACA,UAAM;AAAEG,MAAAA,QAAF;AAAYH,MAAAA,UAAZ;AAAwBC,MAAAA,UAAxB;AAAoCG,MAAAA;AAApC,QAAkD,KAAKL,KAA7D;AACA,UAAM;AACJ0C,MAAAA,WADI;AAEJjB,MAAAA,IAFI;AAGJkB,MAAAA,UAHI;AAIJ3B,MAAAA,OAJI;AAKJY,MAAAA;AALI,QAMF,KAAKV,KANT;AAOA,UAAM0B,IAAI,GAAG3C,UAAU,CAACa,MAAX,GAAoBb,UAApB,GAAiCwB,IAA9C;AAEA,wBACE;AAAA,6BACE;AACE,QAAA,QAAQ,EAAC,GADX;AAEE,QAAA,EAAE,EAAC,cAFL;AAGE,QAAA,MAAM,EAAE,KAAKnB,QAHf;AAIE,QAAA,SAAS,EAAET,MAAM,CAAC,cAAD,CAJnB;AAKE,qBAAU,mBALZ;AAAA,gCAOE;AACE,UAAA,OAAO,EAAE,KAAKwC,cADhB;AAEE,UAAA,SAAS,EAAG,GAAExC,MAAM,CAAC,iBAAD,CAAoB,IACtCA,MAAM,CAACK,UAAU,CAACY,MAAX,GAAoB,EAApB,GAAyB,cAAzB,GAA0C,EAA3C,CACP,EAJH;AAAA,kCAME;AAAK,YAAA,SAAS,EAAEjB,MAAM,CAAC,gBAAD,CAAtB;AAAA,sBACGK,UAAU,CAACY,MAAX,gBACC;AAAK,cAAA,SAAS,EAAEjB,MAAM,CAAC,iBAAD,CAAtB;AAAA,wBACG+B,cAAc,GACb1B,UAAU,CAACwB,GAAX,CAAe,CAACmB,cAAD,EAAiBC,CAAjB,KAAuB;AACpC,oCACE;AAAK,kBAAA,SAAS,EAAEjD,MAAM,CAAC,mBAAD,CAAtB;AAAA,6BACGgD,cAAc,CAAC7B,OAAD,CAAd,CAAwBF,MAAxB,GAAiC,EAAjC,GACG+B,cAAc,CAAC7B,OAAD,CAAd,CAAwB+B,SAAxB,CAAkC,CAAlC,EAAqC,EAArC,IAA2C,KAD9C,GAEGF,cAAc,CAAC7B,OAAD,CAHpB,eAIE,QAAC,eAAD;AACE,oBAAA,OAAO,EAAE,MAAM;AACb,2BAAKb,YAAL,CAAkB0C,cAAlB;AACD,qBAHH;AAIE,oBAAA,SAAS,EAAEhD,MAAM,CAAC,cAAD,CAJnB;AAKE,oBAAA,IAAI,EAAEL;AALR;AAAA;AAAA;AAAA;AAAA,0BAJF;AAAA,mBAAkDsD,CAAlD;AAAA;AAAA;AAAA;AAAA,wBADF;AAcD,eAfD,CADa,gBAkBb;AAAA,0BAAM5C,UAAU,CAAC,CAAD,CAAV,CAAcc,OAAd;AAAN;AAAA;AAAA;AAAA;AAAA;AAnBJ;AAAA;AAAA;AAAA;AAAA,oBADD,gBAwBC;AAAA,wBAAG0B;AAAH;AAzBJ;AAAA;AAAA;AAAA;AAAA,kBANF,eAkCE;AAAK,YAAA,SAAS,EAAE7C,MAAM,CAAC,OAAD,CAAtB;AAAA,uBACGK,UAAU,CAACY,MAAX,gBACC,QAAC,eAAD;AACE,cAAA,SAAS,EAAEjB,MAAM,CAAC,YAAD,CADnB;AAEE,cAAA,OAAO,EAAE,KAAKgB,eAFhB;AAGE,cAAA,IAAI,EAAElB;AAHR;AAAA;AAAA;AAAA;AAAA,oBADD,gBAOC,qCARJ,eAUE,QAAC,eAAD;AACE,cAAA,OAAO,EAAE,KAAKkC,MADhB;AAEE,2BAAU,MAFZ;AAGE,cAAA,IAAI,EAAEzB,QAAQ,GAAGb,SAAH,GAAeD,WAH/B;AAIE,cAAA,SAAS,EAAEO,MAAM,CAAC,MAAD;AAJnB;AAAA;AAAA;AAAA;AAAA,oBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAlCF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,EA4DGO,QAAQ,iBACP;AACE,UAAA,EAAE,EAAC,OADL;AAEE,UAAA,SAAS,EAAG,GAAEP,MAAM,CAAC,cAAD,CAAiB,EAFvC;AAGE,UAAA,MAAM,EAAE,KAAKS,QAHf;AAAA,kCAKE;AACE,YAAA,EAAE,EAAC,aADL;AAEE,YAAA,SAAS,EAAET,MAAM,CAAC,eAAD,CAFnB;AAGE,YAAA,OAAO,EAAE,KAAKmD,aAHhB;AAIE,YAAA,MAAM,EAAE,KAAKC,YAJf;AAAA,mCAME,QAAC,SAAD;AACE,cAAA,IAAI,EAAExB,IADR;AAEE,cAAA,MAAM,EAAE,KAAKd,SAFf;AAGE,cAAA,UAAU,EAAEgC,UAAU,CAACO,UAHzB;AAIE,cAAA,WAAW,EAAEP,UAAU,CAACD,WAJ1B;AAKE,cAAA,SAAS,EAAE7C,MAAM,CAAC,WAAD,CALnB;AAME,cAAA,QAAQ,EAAE,KAAKW;AANjB;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,kBALF,EAqBG,KAAKgC,SAAL,kBACC;AAAK,YAAA,SAAS,EAAE3C,MAAM,CAAC,YAAD,CAAtB;AAAA,uBACG+B,cAAc,IAAI,KAAKQ,aAAL,EAAlB,gBACC;AACE,cAAA,SAAS,EAAEvC,MAAM,CAAC,WAAD,CADnB;AAEE,cAAA,OAAO,EAAE,KAAK2B,aAFhB;AAAA,yBAIGI,cAAc,gBACb,QAAC,eAAD;AACE,gBAAA,SAAS,EAAE/B,MAAM,CAAC,YAAD,CADnB;AAEE,gBAAA,KAAK,EAAC,SAFR;AAGE,gBAAA,IAAI,EAAC,IAHP;AAIE,gBAAA,IAAI,EAAEQ,SAAS,GAAGZ,aAAH,GAAmBC;AAJpC;AAAA;AAAA;AAAA;AAAA,sBADa,gBAQb,qCAZJ,eAcE;AAAG,gBAAA,SAAS,EAAEG,MAAM,CAAC,mBAAD,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,gBAkBC,qCAnBJ,EAsBG+C,IAAI,CAAClB,GAAL,CAAS,CAACX,MAAD,EAAS+B,CAAT,KAAe;AACvB,kCACE;AACE,gBAAA,SAAS,EAAEjD,MAAM,CAAC,OAAD,CADnB;AAGE,gBAAA,OAAO,EAAE,MAAM;AACb,uBAAKwB,oBAAL,CAA0BN,MAA1B;AACD,iBALH;AAME,6BAAU,MANZ;AAAA,2BAQGa,cAAc,gBACb,QAAC,eAAD;AACE,kBAAA,KAAK,EAAC,SADR;AAEE,kBAAA,IAAI,EAAC,IAFP;AAGE,kBAAA,IAAI,EACF,KAAKN,UAAL,CAAgBP,MAAhB,IAA0BtB,aAA1B,GAA0CC;AAJ9C;AAAA;AAAA;AAAA;AAAA,wBADa,gBASb,qCAjBJ,eAmBE;AACE,kBAAA,SAAS,EAAG,GAAEG,MAAM,CAAC,aAAD,CAAgB,IAClCA,MAAM,CAAC,KAAKyB,UAAL,CAAgBP,MAAhB,IAA0B,UAA1B,GAAuC,EAAxC,CACP,EAHH;AAAA,4BAKGA,MAAM,CAACC,OAAD;AALT;AAAA;AAAA;AAAA;AAAA,wBAnBF;AAAA,iBAEO8B,CAFP;AAAA;AAAA;AAAA;AAAA,sBADF;AA6BD,aA9BA,CAtBH;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,gBAwDC;AAAK,YAAA,SAAS,EAAEjD,MAAM,CAAC,WAAD,CAAtB;AAAA,mCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBA7EJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBA7DJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,qBADF;AAqJD;;AA5W8B;;AA+WjCE,QAAQ,CAACD,SAAT,GAAqB;AACnB;AACF;AACA;AACE2B,EAAAA,IAAI,EAAE3B,SAAS,CAACqD,KAAV,CAAgBC,UAJH;;AAKnB;AACF;AACA;AACEpC,EAAAA,OAAO,EAAElB,SAAS,CAACuD,MAAV,CAAiBD,UARP;;AASnB;AACF;AACA;AACEV,EAAAA,WAAW,EAAE5C,SAAS,CAACuD,MAZJ;;AAanB;AACF;AACA;AACEV,EAAAA,UAAU,EAAE7C,SAAS,CAACwD,MAhBH;;AAiBnB;AACF;AACA;AACEJ,EAAAA,UAAU,EAAEpD,SAAS,CAACyD,OAAV,CAAkBzD,SAAS,CAACuD,MAAV,CAAiBD,UAAnC,CApBO;;AAqBnB;AACF;AACA;AACEnC,EAAAA,OAAO,EAAEnB,SAAS,CAAC0D,IAAV,CAAeJ,UAxBL;AAyBnBxB,EAAAA,cAAc,EAAE9B,SAAS,CAAC2D;AAzBP,CAArB;AA4BA1D,QAAQ,CAAC2D,YAAT,GAAwB;AACtBhB,EAAAA,WAAW,EAAE;AADS,CAAxB;AAGA,eAAe3C,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faAngleDown,\n  faAngleUp,\n  faTimesCircle,\n  faCheckSquare,\n  faSquare,\n  faTimes,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport SearchBox from \"../SearchBox/searchBox\";\nimport styles from \"./dropDown.module.scss\";\nimport propTypes from \"prop-types\";\n\nclass DropDown extends Component {\n  state = {\n    resultList: [],\n    OptionList: [],\n    removeOption: false,\n    showList: false,\n    selectAll: false,\n    hideList: false,\n    searchInput: \"\",\n  };\n\n  handleChange = (onChange) => {\n    this.setState({ searchInput: onChange });\n  };\n  /**\n   *\n   * @param {result} result\n   * stores the result\n   */\n  getResult = (result) => {\n    this.setState({ resultList: [...result] });\n  };\n  /**\n   *\n   * @param {event} event\n   * focuses on searchBar\n   */\n\n  /**\n   * removes all selected Options\n   */\n  removeAllOption = () => {\n    this.setState({ OptionList: [], selectAll: false });\n    if (this.state.OptionList.length && this.state.hideList === true) {\n      this.setState({ showList: true });\n    }\n  };\n\n  /**\n   *\n   * @param {option} option\n   * removes selected options\n   */\n  removeOption = (option) => {\n    const { OptionList } = this.state;\n    const { showKey, getList } = this.props;\n    let result = OptionList.filter((selectedoption) => {\n      return selectedoption[showKey] !== option[showKey];\n    });\n\n    this.setState({ OptionList: result }, () => {\n      getList(this.state.OptionList);\n    });\n    this.setState({ removeOption: true });\n    if (result.length === 0 || result.length - 1) {\n      this.setState({ selectAll: false });\n    }\n  };\n  /**\n   *\n   * @param {option} option\n   * if the option is selected it removes it\n   * and if the option is not selected it adds\n   * to the list.\n   */\n\n  removeSelectedOption = (option) => {\n    this.isSelected(option)\n      ? this.removeOption(option)\n      : this.addToList(option);\n  };\n\n  /**\n   * it returns the select All data and sets the states.\n   */\n  selectAllData = () => {\n    const { data } = this.props;\n    const { selectAll } = this.state;\n    const result = data.map((options) => {\n      return options;\n    });\n    this.setState({ OptionList: result, selectAll: !selectAll }, () => {\n      if (selectAll === true) {\n        this.setState({ OptionList: [] });\n      } else {\n        this.setState({ OptionList: result });\n      }\n    });\n  };\n\n  /**\n   *\n   * @param {option}\n   * stores array of Objects of the selected option\n   */\n  addToList = (option) => {\n    const { OptionList } = this.state;\n    const { multipleSelect } = this.props;\n    const options = [...OptionList, { ...option }];\n    this.setState({ OptionList: options });\n\n    if (!multipleSelect) {\n      this.setState({ OptionList: [{ ...option }] });\n\n      const { getList } = this.props;\n      getList(option);\n      this.toggle();\n    }\n  };\n  /**\n   *\n   * @param {event} event\n   * it hides the list when out of Focus\n   */\n  hideList = (event) => {\n    const { multipleSelect, getList } = this.props;\n    const { OptionList } = this.state;\n    if (\n      event.currentTarget.id === \"dropdown-div\" &&\n      !event.currentTarget.contains(event.relatedTarget)\n    ) {\n      this.toggle();\n\n      this.setState({ hideList: !this.state.hideList });\n    }\n\n    if (multipleSelect && OptionList.length) {\n      getList(OptionList);\n    }\n  };\n\n  /**\n   * arrow angle is changed\n   */\n  toggle = () => {\n    this.setState({ showList: !this.state.showList });\n  };\n\n  /**\n   * @param {option}\n   * checks wheather the option is selected\n   */\n  isSelected = (option) => {\n    const { showKey } = this.props;\n    return this.state.OptionList.some(\n      (options) => options[showKey] === option[showKey]\n    );\n  };\n  /**\n   * it checks for selectAllOptions & OptionList length and\n   * returns true else true false\n   */\n  isAllSelected = () => {\n    if (this.state.resultList.length) return false;\n    return true;\n  };\n  /**\n   * toggles the dropdown menu\n   */\n\n  DropDownToggle = () => {\n    const { OptionList, resultList } = this.state;\n    if (!OptionList.length) {\n      this.toggle();\n    } else if (this.state.hideList === true) {\n      if (OptionList.length--) {\n        this.setState({ showList: false });\n        console.log(\"Running\");\n      } else {\n        this.toggle();\n        console.log(\"Running else part\");\n      }\n    } else if (this.state.hideList === false && OptionList.length) {\n      this.setState({ showList: true });\n    } else if (\n      this.state.hideList === false &&\n      OptionList.length &&\n      resultList.length\n    ) {\n      this.setState({ showList: true });\n    }\n  };\n  /**\n   * checks for no result\n   */\n  noResults = () => {\n    const { showKey } = this.props;\n    const result = this.state.resultList.some(\n      (options) => this.state.searchInput !== options[showKey]\n    );\n    console.log(result);\n    if (result === false && !this.state.searchInput.length) {\n      return true;\n    }\n    if (result === true) {\n      return true;\n    } else if (result === false) {\n      return false;\n    }\n  };\n  /**\n   * returns dropdown list\n   */\n  render() {\n    console.log(this.state.resultList);\n    const { showList, resultList, OptionList, selectAll } = this.state;\n    const {\n      placeholder,\n      data,\n      searchList,\n      showKey,\n      multipleSelect,\n    } = this.props;\n    const list = resultList.length ? resultList : data;\n\n    return (\n      <>\n        <div\n          tabIndex=\"0\"\n          id=\"dropdown-div\"\n          onBlur={this.hideList}\n          className={styles[\"dropdown-div\"]}\n          data-test=\"DropdownComponent\"\n        >\n          <div\n            onClick={this.DropDownToggle}\n            className={`${styles[\"dropdown-button\"]} ${\n              styles[OptionList.length > 10 ? \"adjustheight\" : \"\"]\n            }`}\n          >\n            <div className={styles[\"button-heading\"]}>\n              {OptionList.length ? (\n                <div className={styles[\"selectedOptions\"]}>\n                  {multipleSelect ? (\n                    OptionList.map((optionSelected, i) => {\n                      return (\n                        <div className={styles[\"multiSelectOption\"]} key={i}>\n                          {optionSelected[showKey].length > 10\n                            ? optionSelected[showKey].substring(0, 10) + \"...\"\n                            : optionSelected[showKey]}\n                          <FontAwesomeIcon\n                            onClick={() => {\n                              this.removeOption(optionSelected);\n                            }}\n                            className={styles[\"removeOption\"]}\n                            icon={faTimesCircle}\n                          />\n                        </div>\n                      );\n                    })\n                  ) : (\n                    <div>{OptionList[0][showKey]}</div>\n                  )}\n                </div>\n              ) : (\n                <>{placeholder}</>\n              )}\n            </div>\n            <div className={styles[\"icons\"]}>\n              {OptionList.length ? (\n                <FontAwesomeIcon\n                  className={styles[\"removeIcon\"]}\n                  onClick={this.removeAllOption}\n                  icon={faTimes}\n                />\n              ) : (\n                <></>\n              )}\n              <FontAwesomeIcon\n                onClick={this.toggle}\n                data-test=\"icon\"\n                icon={showList ? faAngleUp : faAngleDown}\n                className={styles[\"icon\"]}\n              />\n            </div>\n          </div>\n\n          {showList && (\n            <div\n              id=\"lists\"\n              className={`${styles[\"dropdownlist\"]}`}\n              onBlur={this.hideList}\n            >\n              <div\n                id=\"searchInput\"\n                className={styles[\"searchBar-div\"]}\n                onFocus={this.onSearchFocus}\n                onBlur={this.onSearchBlur}\n              >\n                <SearchBox\n                  data={data}\n                  result={this.getResult}\n                  searchkeys={searchList.searchkeys}\n                  placeholder={searchList.placeholder}\n                  className={styles[\"searchbar\"]}\n                  onChange={this.handleChange}\n                />\n              </div>\n\n              {this.noResults() ? (\n                <div className={styles[\"allListDiv\"]}>\n                  {multipleSelect && this.isAllSelected() ? (\n                    <div\n                      className={styles[\"selectAll\"]}\n                      onClick={this.selectAllData}\n                    >\n                      {multipleSelect ? (\n                        <FontAwesomeIcon\n                          className={styles[\"check-icon\"]}\n                          color=\"#3483eb\"\n                          size=\"2x\"\n                          icon={selectAll ? faCheckSquare : faSquare}\n                        />\n                      ) : (\n                        <></>\n                      )}\n                      <p className={styles[\"selectAll-heading\"]}>Select All</p>\n                    </div>\n                  ) : (\n                    <></>\n                  )}\n\n                  {list.map((option, i) => {\n                    return (\n                      <div\n                        className={styles[\"lists\"]}\n                        key={i}\n                        onClick={() => {\n                          this.removeSelectedOption(option);\n                        }}\n                        data-test=\"list\"\n                      >\n                        {multipleSelect ? (\n                          <FontAwesomeIcon\n                            color=\"#3483eb\"\n                            size=\"2x\"\n                            icon={\n                              this.isSelected(option) ? faCheckSquare : faSquare\n                            }\n                          />\n                        ) : (\n                          <></>\n                        )}\n                        <button\n                          className={`${styles[\"list-button\"]} ${\n                            styles[this.isSelected(option) ? \"selected\" : \"\"]\n                          }`}\n                        >\n                          {option[showKey]}\n                        </button>\n                      </div>\n                    );\n                  })}\n                </div>\n              ) : (\n                <div className={styles[\"no-result\"]}>\n                  <i>No results</i>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nDropDown.propTypes = {\n  /**\n   *  must be array of objects\n   */\n  data: propTypes.array.isRequired,\n  /**\n   * must be a string (searchInput)\n   */\n  showKey: propTypes.string.isRequired,\n  /**\n   * must be a string\n   */\n  placeholder: propTypes.string,\n  /**\n   * must be an object\n   */\n  searchList: propTypes.object,\n  /**\n   * must be array of object keys and it is an object of searchList\n   */\n  searchkeys: propTypes.arrayOf(propTypes.string.isRequired),\n  /**\n   * will give the result\n   */\n  getList: propTypes.func.isRequired,\n  multipleSelect: propTypes.bool,\n};\n\nDropDown.defaultProps = {\n  placeholder: \"Select\",\n};\nexport default DropDown;\n"]},"metadata":{},"sourceType":"module"}