{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/teainee/Documents/React-Tasks/search-dropdown-menu/src/components/DropDown/dropDown.jsx\";\nimport React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleDown, faAngleUp, faTimesCircle, faCheckSquare, faSquare, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport SearchBox from \"../SearchBox/searchBox\";\nimport styles from \"./dropDown.module.scss\";\nimport propTypes from \"prop-types\";\n\nclass DropDown extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      resultList: [],\n      OptionList: [],\n      showList: false,\n      selectAll: false,\n      searchInput: \"\"\n    };\n\n    this.handleChange = onChange => {\n      this.setState({\n        searchInput: onChange\n      });\n    };\n\n    this.getResult = result => {\n      this.setState({\n        resultList: [...result]\n      });\n    };\n\n    this.removeAllOption = () => {\n      this.setState({\n        OptionList: [],\n        selectAll: false\n      });\n\n      if (this.state.OptionList.length && this.state.hideList === true) {\n        this.setState({\n          showList: true\n        });\n      }\n    };\n\n    this.removeOption = option => {\n      const {\n        OptionList\n      } = this.state;\n      const {\n        showKey,\n        getList\n      } = this.props;\n      let getIndex = OptionList.findIndex(selectedoption => {\n        return selectedoption[showKey] === option[showKey];\n      });\n      OptionList.splice(getIndex, 1);\n      this.setState({\n        OptionList: OptionList\n      }, () => {\n        getList(this.state.OptionList);\n      });\n\n      if (OptionList.length === 0 || OptionList.length - 1) {\n        this.setState({\n          selectAll: false\n        });\n      }\n    };\n\n    this.removeSelectedOption = option => {\n      this.isSelected(option) ? this.removeOption(option) : this.addToList(option);\n    };\n\n    this.selectAllData = () => {\n      const {\n        data\n      } = this.props;\n      const {\n        selectAll\n      } = this.state;\n      const result = data.map(options => {\n        return options;\n      });\n      this.setState({\n        OptionList: result,\n        selectAll: !selectAll\n      }, () => {\n        if (this.state.selectAll) {\n          this.setState({\n            OptionList: result\n          });\n        } else {\n          this.setState({\n            OptionList: []\n          });\n        }\n      });\n    };\n\n    this.addToList = option => {\n      const {\n        OptionList\n      } = this.state;\n      const {\n        multipleSelect,\n        data\n      } = this.props;\n      const options = [...OptionList, { ...option\n      }];\n\n      if (!multipleSelect) {\n        this.setState({\n          OptionList: [{ ...option\n          }]\n        });\n        const {\n          getList\n        } = this.props;\n        getList(option);\n        this.toggle();\n      } else {\n        this.setState({\n          OptionList: options\n        }, () => {\n          if (OptionList.length + 1 === data.length) {\n            this.setState({\n              selectAll: true\n            });\n          }\n        });\n      }\n    };\n\n    this.hideList = event => {\n      const {\n        multipleSelect,\n        getList\n      } = this.props;\n      const {\n        OptionList\n      } = this.state;\n\n      if (event.currentTarget.id === \"dropdown-div\" && !event.currentTarget.contains(event.relatedTarget)) {\n        this.setState({\n          showList: false\n        });\n      }\n\n      if (multipleSelect && OptionList.length) {\n        getList(OptionList);\n      }\n    };\n\n    this.toggle = () => {\n      this.setState({\n        showList: !this.state.showList\n      });\n    };\n\n    this.isSelected = option => {\n      const {\n        showKey\n      } = this.props;\n      return this.state.OptionList.some(options => options[showKey] === option[showKey]);\n    };\n\n    this.isAllSelected = () => {\n      if (this.state.resultList.length) return false;\n      return true;\n    };\n\n    this.DropDownToggle = event => {\n      if (event.target === event.currentTarget) {\n        this.setState({\n          showList: !this.state.showList\n        });\n        return;\n      } else {\n        return;\n      }\n    };\n\n    this.isResults = () => {\n      if (!this.state.resultList.length && this.state.searchInput.length) {\n        return false;\n      } else {\n        return true;\n      }\n    };\n  }\n\n  /**\n   * returns dropdown list\n   */\n  render() {\n    const {\n      showList,\n      resultList,\n      OptionList,\n      selectAll\n    } = this.state;\n    const {\n      placeholder,\n      data,\n      searchList,\n      showKey,\n      multipleSelect\n    } = this.props;\n    const list = resultList.length ? resultList : data;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        tabIndex: \"0\",\n        id: \"dropdown-div\",\n        onBlur: this.hideList,\n        className: styles[\"dropdown-div\"],\n        \"data-test\": \"DropdownComponent\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: this.DropDownToggle,\n          className: `${styles[\"dropdown-button\"]} ${styles[OptionList.length > 10 ? \"adjustheight\" : \"\"]}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles[\"button-heading\"],\n            children: OptionList.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles[\"selectedOptions\"],\n              children: multipleSelect ? OptionList.map((optionSelected, i) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: styles[\"multiSelectOption\"],\n                  children: [optionSelected[showKey].length > 10 ? optionSelected[showKey].substring(0, 10) + \"...\" : optionSelected[showKey], /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    onClick: () => {\n                      this.removeOption(optionSelected);\n                    },\n                    className: styles[\"removeOption\"],\n                    icon: faTimesCircle\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 294,\n                    columnNumber: 27\n                  }, this)]\n                }, i, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 25\n                }, this);\n              }) : /*#__PURE__*/_jsxDEV(\"div\", {\n                children: OptionList[0][showKey]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: placeholder\n            }, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles[\"icons\"],\n            children: [OptionList.length ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              className: styles[\"removeIcon\"],\n              onClick: this.removeAllOption,\n              icon: faTimes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              onClick: this.toggle,\n              \"data-test\": \"icon\",\n              icon: showList ? faAngleUp : faAngleDown,\n              className: styles[\"icon\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), showList && /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"lists\",\n          className: `${styles[\"dropdownlist\"]}`,\n          onBlur: this.hideList,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"searchInput\",\n            className: styles[\"searchBar-div\"],\n            children: /*#__PURE__*/_jsxDEV(SearchBox, {\n              data: data,\n              result: this.getResult,\n              searchkeys: searchList.searchkeys,\n              placeholder: searchList.placeholder,\n              className: styles[\"searchbar\"],\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 15\n          }, this), this.isResults() ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles[\"allListDiv\"],\n            children: [multipleSelect && this.isAllSelected() ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles[\"selectAll\"],\n              onClick: this.selectAllData,\n              children: [multipleSelect ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                className: styles[\"check-icon\"],\n                color: \"#3483eb\",\n                size: \"2x\",\n                icon: selectAll ? faCheckSquare : faSquare\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 25\n              }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: styles[\"selectAll-heading\"],\n                children: \"Select All\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), list.map((option, i) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles[\"lists\"],\n                onClick: () => {\n                  this.removeSelectedOption(option);\n                },\n                \"data-test\": \"list\",\n                children: [multipleSelect ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  color: \"#3483eb\",\n                  size: \"2x\",\n                  icon: this.isSelected(option) ? faCheckSquare : faSquare\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 383,\n                  columnNumber: 27\n                }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `${styles[\"list-button\"]} ${styles[this.isSelected(option) ? \"selected\" : \"\"]}`,\n                  children: option[showKey]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 393,\n                  columnNumber: 25\n                }, this)]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 23\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles[\"no-result\"],\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"No results\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nDropDown.propTypes = {\n  /**\n   *  must be array of objects\n   */\n  data: propTypes.array.isRequired,\n\n  /**\n   * must be a string (searchInput)\n   */\n  showKey: propTypes.string.isRequired,\n\n  /**\n   * must be a string\n   */\n  placeholder: propTypes.string,\n\n  /**\n   * must be an object\n   */\n  searchList: propTypes.object,\n\n  /**\n   * must be array of object keys and it is an object of searchList\n   */\n  searchkeys: propTypes.arrayOf(propTypes.string.isRequired),\n\n  /**\n   * will give the selected options\n   */\n  getList: propTypes.func.isRequired,\n\n  /**\n   * must be boolean for multi-select\n   */\n  multipleSelect: propTypes.bool\n};\nDropDown.defaultProps = {\n  placeholder: \"Select\"\n};\nexport default DropDown;","map":{"version":3,"sources":["/home/teainee/Documents/React-Tasks/search-dropdown-menu/src/components/DropDown/dropDown.jsx"],"names":["React","Component","FontAwesomeIcon","faAngleDown","faAngleUp","faTimesCircle","faCheckSquare","faSquare","faTimes","SearchBox","styles","propTypes","DropDown","state","resultList","OptionList","showList","selectAll","searchInput","handleChange","onChange","setState","getResult","result","removeAllOption","length","hideList","removeOption","option","showKey","getList","props","getIndex","findIndex","selectedoption","splice","removeSelectedOption","isSelected","addToList","selectAllData","data","map","options","multipleSelect","toggle","event","currentTarget","id","contains","relatedTarget","some","isAllSelected","DropDownToggle","target","isResults","render","placeholder","searchList","list","optionSelected","i","substring","searchkeys","array","isRequired","string","object","arrayOf","func","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faAngleDown,\n  faAngleUp,\n  faTimesCircle,\n  faCheckSquare,\n  faSquare,\n  faTimes,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport SearchBox from \"../SearchBox/searchBox\";\nimport styles from \"./dropDown.module.scss\";\nimport propTypes from \"prop-types\";\n\nclass DropDown extends Component {\n  state = {\n    resultList: [],\n    OptionList: [],\n    showList: false,\n    selectAll: false,\n    searchInput: \"\",\n  };\n\n  handleChange = (onChange) => {\n    this.setState({ searchInput: onChange });\n  };\n  /**\n   *\n   * @param {result} result\n   * stores the result\n   */\n  getResult = (result) => {\n    this.setState({ resultList: [...result] });\n  };\n  /**\n   *\n   * @param {event} event\n   * focuses on searchBar\n   */\n\n  /**\n   * removes all selected Options\n   */\n  removeAllOption = () => {\n    this.setState({ OptionList: [], selectAll: false });\n    if (this.state.OptionList.length && this.state.hideList === true) {\n      this.setState({ showList: true });\n    }\n  };\n\n  /**\n   *\n   * @param {option} option\n   * removes selected options\n   */\n  // removeOption = (option) => {\n  //   const { OptionList } = this.state;\n  //   const { showKey, getList } = this.props;\n  //   let result = OptionList.filter((selectedoption) => {\n  //     return selectedoption[showKey] !== option[showKey];\n  //   });\n\n  //   this.setState({ OptionList: result }, () => {\n  //     getList(this.state.OptionList);\n  //   });\n\n  //   if (result.length === 0 || result.length - 1) {\n  //     this.setState({ selectAll: false });\n  //   }\n  // };\n\n  removeOption = (option) => {\n    const { OptionList } = this.state;\n    const { showKey, getList } = this.props;\n\n    let getIndex = OptionList.findIndex((selectedoption) => {\n      return selectedoption[showKey] === option[showKey];\n    });\n\n    OptionList.splice(getIndex, 1);\n    this.setState({ OptionList: OptionList }, () => {\n      getList(this.state.OptionList);\n    });\n\n    if (OptionList.length === 0 || OptionList.length - 1) {\n      this.setState({ selectAll: false });\n    }\n  };\n  /**\n   *\n   * @param {option} option\n   * if the option is selected it removes it\n   * and if the option is not selected it adds\n   * to the list.\n   */\n\n  removeSelectedOption = (option) => {\n    this.isSelected(option)\n      ? this.removeOption(option)\n      : this.addToList(option);\n  };\n\n  /**\n   * it returns the select All data and sets the states.\n   */\n  selectAllData = () => {\n    const { data } = this.props;\n    const { selectAll } = this.state;\n    const result = data.map((options) => {\n      return options;\n    });\n    this.setState({ OptionList: result, selectAll: !selectAll }, () => {\n      if (this.state.selectAll) {\n        this.setState({ OptionList: result });\n      } else {\n        this.setState({ OptionList: [] });\n      }\n    });\n  };\n\n  /**\n   *\n   * @param {option}\n   * stores array of Objects of the selected option\n   */\n  // addToList = (option) => {\n  //   const { OptionList } = this.state;\n  //   const { multipleSelect } = this.props;\n  //   const options = [...OptionList, { ...option }];\n  //   this.setState({ OptionList: options });\n\n  //   if (!multipleSelect) {\n  //     this.setState({ OptionList: [{ ...option }] });\n\n  //     const { getList } = this.props;\n  //     getList(option);\n  //     this.toggle();\n  //   }\n  // };\n\n  addToList = (option) => {\n    const { OptionList } = this.state;\n    const { multipleSelect, data } = this.props;\n    const options = [...OptionList, { ...option }];\n\n    if (!multipleSelect) {\n      this.setState({ OptionList: [{ ...option }] });\n      const { getList } = this.props;\n      getList(option);\n      this.toggle();\n    } else {\n      this.setState({ OptionList: options }, () => {\n        if (OptionList.length + 1 === data.length) {\n          this.setState({ selectAll: true });\n        }\n      });\n    }\n  };\n  /**\n   *\n   * @param {event} event\n   * it hides the list when out of Focus\n   */\n  hideList = (event) => {\n    const { multipleSelect, getList } = this.props;\n    const { OptionList } = this.state;\n    if (\n      event.currentTarget.id === \"dropdown-div\" &&\n      !event.currentTarget.contains(event.relatedTarget)\n    ) {\n      this.setState({ showList: false });\n    }\n\n    if (multipleSelect && OptionList.length) {\n      getList(OptionList);\n    }\n  };\n\n  /**\n   * to toggle arrow angle\n   */\n  toggle = () => {\n    this.setState({ showList: !this.state.showList });\n  };\n\n  /**\n   * @param {option}\n   * checks wheather the option is selected\n   */\n  isSelected = (option) => {\n    const { showKey } = this.props;\n    return this.state.OptionList.some(\n      (options) => options[showKey] === option[showKey]\n    );\n  };\n  /**\n   * it checks for selectAllOptions & OptionList length and\n   * returns true else true false\n   */\n  isAllSelected = () => {\n    if (this.state.resultList.length) return false;\n    return true;\n  };\n  /**\n   * toggles the dropdown menu\n   */\n\n  // DropDownToggle = () => {\n  //   const { OptionList, resultList, showList } = this.state;\n  //   this.toggle();\n\n  //   if (OptionList.length && showList === false) {\n  //     this.setState({ showList: false });\n  //   } else if (OptionList.length && showList === true) {\n  //     this.setState({ showList: true });\n  //   } else if (OptionList.length && resultList.length && showList === true) {\n  //     this.setState({ showList: true });\n  //   }\n  // };\n\n  DropDownToggle = (event) => {\n    if (event.target === event.currentTarget) {\n      this.setState({ showList: !this.state.showList });\n      return;\n    } else {\n      return;\n    }\n  };\n  /**\n   * checks for searched value and return no result if\n   * not present.\n   */\n  // noResults = () => {\n  //   const { showKey } = this.props;\n  //   const result = this.state.resultList.some(\n  //     (options) => this.state.searchInput !== options[showKey]\n  //   );\n\n  //   if (result === false && !this.state.searchInput.length) {\n  //     return true;\n  //   }\n  //   if (result === true) {\n  //     return true;\n  //   } else if (result === false) {\n  //     return false;\n  //   }\n  // };\n  isResults = () => {\n    if (!this.state.resultList.length && this.state.searchInput.length) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n  /**\n   * returns dropdown list\n   */\n  render() {\n    const { showList, resultList, OptionList, selectAll } = this.state;\n    const {\n      placeholder,\n      data,\n      searchList,\n      showKey,\n      multipleSelect,\n    } = this.props;\n    const list = resultList.length ? resultList : data;\n\n    return (\n      <>\n        <div\n          tabIndex=\"0\"\n          id=\"dropdown-div\"\n          onBlur={this.hideList}\n          className={styles[\"dropdown-div\"]}\n          data-test=\"DropdownComponent\"\n        >\n          <div\n            onClick={this.DropDownToggle}\n            className={`${styles[\"dropdown-button\"]} ${\n              styles[OptionList.length > 10 ? \"adjustheight\" : \"\"]\n            }`}\n          >\n            <div className={styles[\"button-heading\"]}>\n              {OptionList.length ? (\n                <div className={styles[\"selectedOptions\"]}>\n                  {multipleSelect ? (\n                    OptionList.map((optionSelected, i) => {\n                      return (\n                        <div className={styles[\"multiSelectOption\"]} key={i}>\n                          {optionSelected[showKey].length > 10\n                            ? optionSelected[showKey].substring(0, 10) + \"...\"\n                            : optionSelected[showKey]}\n                          <FontAwesomeIcon\n                            onClick={() => {\n                              this.removeOption(optionSelected);\n                            }}\n                            className={styles[\"removeOption\"]}\n                            icon={faTimesCircle}\n                          />\n                        </div>\n                      );\n                    })\n                  ) : (\n                    <div>{OptionList[0][showKey]}</div>\n                  )}\n                </div>\n              ) : (\n                <>{placeholder}</>\n              )}\n            </div>\n\n            <div className={styles[\"icons\"]}>\n              {OptionList.length ? (\n                <FontAwesomeIcon\n                  className={styles[\"removeIcon\"]}\n                  onClick={this.removeAllOption}\n                  icon={faTimes}\n                />\n              ) : (\n                <></>\n              )}\n              <FontAwesomeIcon\n                onClick={this.toggle}\n                data-test=\"icon\"\n                icon={showList ? faAngleUp : faAngleDown}\n                className={styles[\"icon\"]}\n              />\n            </div>\n          </div>\n\n          {showList && (\n            <div\n              id=\"lists\"\n              className={`${styles[\"dropdownlist\"]}`}\n              onBlur={this.hideList}\n            >\n              <div id=\"searchInput\" className={styles[\"searchBar-div\"]}>\n                <SearchBox\n                  data={data}\n                  result={this.getResult}\n                  searchkeys={searchList.searchkeys}\n                  placeholder={searchList.placeholder}\n                  className={styles[\"searchbar\"]}\n                  onChange={this.handleChange}\n                />\n              </div>\n\n              {this.isResults() ? (\n                <div className={styles[\"allListDiv\"]}>\n                  {multipleSelect && this.isAllSelected() ? (\n                    <div\n                      className={styles[\"selectAll\"]}\n                      onClick={this.selectAllData}\n                    >\n                      {multipleSelect ? (\n                        <FontAwesomeIcon\n                          className={styles[\"check-icon\"]}\n                          color=\"#3483eb\"\n                          size=\"2x\"\n                          icon={selectAll ? faCheckSquare : faSquare}\n                        />\n                      ) : (\n                        <></>\n                      )}\n                      <p className={styles[\"selectAll-heading\"]}>Select All</p>\n                    </div>\n                  ) : (\n                    <></>\n                  )}\n\n                  {list.map((option, i) => {\n                    return (\n                      <div\n                        className={styles[\"lists\"]}\n                        key={i}\n                        onClick={() => {\n                          this.removeSelectedOption(option);\n                        }}\n                        data-test=\"list\"\n                      >\n                        {multipleSelect ? (\n                          <FontAwesomeIcon\n                            color=\"#3483eb\"\n                            size=\"2x\"\n                            icon={\n                              this.isSelected(option) ? faCheckSquare : faSquare\n                            }\n                          />\n                        ) : (\n                          <></>\n                        )}\n                        <button\n                          className={`${styles[\"list-button\"]} ${\n                            styles[this.isSelected(option) ? \"selected\" : \"\"]\n                          }`}\n                        >\n                          {option[showKey]}\n                        </button>\n                      </div>\n                    );\n                  })}\n                </div>\n              ) : (\n                <div className={styles[\"no-result\"]}>\n                  <i>No results</i>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nDropDown.propTypes = {\n  /**\n   *  must be array of objects\n   */\n  data: propTypes.array.isRequired,\n  /**\n   * must be a string (searchInput)\n   */\n  showKey: propTypes.string.isRequired,\n  /**\n   * must be a string\n   */\n  placeholder: propTypes.string,\n  /**\n   * must be an object\n   */\n  searchList: propTypes.object,\n  /**\n   * must be array of object keys and it is an object of searchList\n   */\n  searchkeys: propTypes.arrayOf(propTypes.string.isRequired),\n  /**\n   * will give the selected options\n   */\n  getList: propTypes.func.isRequired,\n  /**\n   * must be boolean for multi-select\n   */\n  multipleSelect: propTypes.bool,\n};\n\nDropDown.defaultProps = {\n  placeholder: \"Select\",\n};\nexport default DropDown;\n"]},"metadata":{},"sourceType":"module"}